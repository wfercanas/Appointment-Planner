{"version":3,"sources":["components/contactPicker/ContactPicker.js","components/appointmentForm/AppointmentForm.js","components/tile/Tile.js","components/tileList/TileList.js","containers/appointmentsPage/appointmentsPage.js","components/contactForm/ContactForm.js","containers/contactsPage/ContactsPage.js","App.js","index.js"],"names":["ContactPicker","contacts","handleChange","onChange","name","required","value","map","contact","indexOf","AppointmentForm","title","date","time","handleSubmit","onSubmit","type","placeholder","min","Date","toLocaleDateString","split","month","day","year","padStart","getTodayString","Tile","object","values","Object","className","TileList","appointments","element","index","AppointmentsPage","createAppointment","useState","setTitle","setContact","setDate","setTime","e","preventDefault","target","ContactForm","phone","email","duplicatedName","style","color","fontSize","maxLength","pattern","ContactsPage","createContact","currentName","setCurrentName","currentPhone","setCurrentPhone","currentEmail","setCurrentEmail","setDuplicatedName","useEffect","some","App","setContacts","setAppointments","ROUTES","to","activeClassName","path","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ab998bf7.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ContactPicker = ({ contacts, handleChange }) => {\n  return (\n    <select onChange={handleChange} name=\"contact\" required>\n      <option key=\"unselected\" value=\"\">\n        No contact selected\n      </option>\n      {contacts.map((contact) => {\n        return (\n          <option key={contacts.indexOf(contact)} value={contact.name}>\n            {contact.name}\n          </option>\n        );\n      })}\n    </select>\n  );\n};\n","import React from 'react';\nimport { ContactPicker } from '../contactPicker/ContactPicker';\n\nexport const AppointmentForm = ({\n  contacts,\n  title,\n  contact,\n  date,\n  time,\n  handleSubmit,\n  handleChange,\n}) => {\n  const getTodayString = () => {\n    const [month, day, year] = new Date()\n      .toLocaleDateString('en-US')\n      .split('/');\n    return `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        name=\"title\"\n        type=\"text\"\n        placeholder=\"Create appointment title\"\n        value={title}\n        onChange={handleChange}\n        required\n      />\n      <ContactPicker contacts={contacts} handleChange={handleChange} />\n      <input\n        name=\"date\"\n        type=\"date\"\n        value={date}\n        onChange={handleChange}\n        min={getTodayString()}\n        required\n      />\n      <input\n        name=\"time\"\n        type=\"time\"\n        value={time}\n        onChange={handleChange}\n        required\n      />\n      <button type=\"submit\">Create appointment</button>\n    </form>\n  );\n};\n","import React from 'react';\n\nconst Tile = ({ object }) => {\n  const values = Object.values(object);\n\n  return (\n    <div className=\"tile-container\">\n      {values.map((value) => (\n        <p\n          key={values.indexOf(value)}\n          className={values.indexOf(value) === 0 ? 'tile-title' : 'tile'}\n        >\n          {value}\n        </p>\n      ))}\n    </div>\n  );\n};\n\nexport default Tile;\n","import React from 'react';\n\nimport Tile from '../tile/Tile';\n\nexport const TileList = ({ contacts, appointments }) => {\n  const arr = contacts || appointments;\n  return arr.map((element, index) => <Tile key={index} object={element} />);\n};\n","import React, { useState } from 'react';\nimport { AppointmentForm } from '../../components/appointmentForm/AppointmentForm';\nimport { TileList } from '../../components/tileList/TileList';\n\nexport const AppointmentsPage = ({\n  contacts,\n  appointments,\n  createAppointment,\n}) => {\n  const [title, setTitle] = useState('');\n  const [contact, setContact] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n\n  const handleChange = (e) => {\n    const setters = {\n      title: setTitle,\n      contact: setContact,\n      date: setDate,\n      time: setTime,\n    };\n\n    const stateToChange = e.target.name;\n    setters[stateToChange](e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    createAppointment(title, contact, date, time);\n  };\n\n  return (\n    <div>\n      <section>\n        <h2>Add Appointment</h2>\n        <AppointmentForm\n          title={title}\n          contact={contact}\n          contacts={contacts}\n          date={date}\n          time={time}\n          handleSubmit={handleSubmit}\n          handleChange={handleChange}\n        />\n      </section>\n      <hr />\n      <section>\n        <h2>Appointments</h2>\n        <TileList appointments={appointments} />\n      </section>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const ContactForm = ({\n  name,\n  phone,\n  email,\n  handleChange,\n  handleSubmit,\n  duplicatedName,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <p style={{ color: 'red', fontSize: 10 }}>\n        {duplicatedName ? 'This name already exists as contact' : ''}\n      </p>\n      <input\n        type=\"text\"\n        name=\"currentName\"\n        placeholder=\"Insert new contact name\"\n        value={name}\n        onChange={handleChange}\n        required\n      />\n      <input\n        type=\"tel\"\n        name=\"currentPhone\"\n        placeholder=\"Insert new contact cellphone number (10 digits)\"\n        maxLength=\"10\"\n        pattern=\"[0-9]{10}\"\n        value={phone}\n        onChange={handleChange}\n        required\n      />\n      <input\n        type=\"email\"\n        name=\"currentEmail\"\n        placeholder=\"Insert new contact email\"\n        value={email}\n        onChange={handleChange}\n        required\n      />\n      <button type=\"submit\">Create contact</button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { ContactForm } from '../../components/contactForm/ContactForm';\nimport { TileList } from '../../components/tileList/TileList';\n\nexport const ContactsPage = ({ contacts, createContact }) => {\n  const [currentName, setCurrentName] = useState('');\n  const [currentPhone, setCurrentPhone] = useState('');\n  const [currentEmail, setCurrentEmail] = useState('');\n\n  const [duplicatedName, setDuplicatedName] = useState(false);\n  useEffect(() => {\n    setDuplicatedName(contacts.some((contact) => contact.name === currentName));\n  }, [currentName, contacts]);\n\n  const handleChange = (e) => {\n    const setters = {\n      currentName: setCurrentName,\n      currentPhone: setCurrentPhone,\n      currentEmail: setCurrentEmail,\n    };\n\n    const stateToChange = e.target.name;\n    setters[stateToChange](e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (duplicatedName) {\n      return;\n    } else {\n      createContact(currentName, currentPhone, currentEmail);\n    }\n\n    setCurrentName('');\n    setCurrentPhone('');\n    setCurrentEmail('');\n  };\n\n  return (\n    <div>\n      <section>\n        <h2>Add Contact</h2>\n        <ContactForm\n          name={currentName}\n          phone={currentPhone}\n          email={currentEmail}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          duplicatedName={duplicatedName}\n        />\n      </section>\n      <hr />\n      <section>\n        <h2>Contacts</h2>\n        <TileList contacts={contacts} />\n      </section>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Switch, Route, NavLink } from 'react-router-dom';\n\nimport { AppointmentsPage } from './containers/appointmentsPage/appointmentsPage';\nimport { ContactsPage } from './containers/contactsPage/ContactsPage';\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n\n  const ROUTES = {\n    CONTACTS: '/contacts',\n    APPOINTMENTS: '/appointments',\n  };\n\n  const createContact = (name, phone, email) => {\n    setContacts((prev) => [\n      ...prev,\n      {\n        name,\n        phone,\n        email,\n      },\n    ]);\n  };\n\n  const createAppointment = (title, contact, date, time) => {\n    setAppointments((prev) => [\n      ...prev,\n      {\n        title,\n        contact,\n        date,\n        time,\n      },\n    ]);\n  };\n\n  return (\n    <>\n      <nav>\n        <NavLink to={ROUTES.CONTACTS} activeClassName=\"active\">\n          Contacts\n        </NavLink>\n        <NavLink to={ROUTES.APPOINTMENTS} activeClassName=\"active\">\n          Appointments\n        </NavLink>\n      </nav>\n      <main>\n        <Switch>\n          <Route path={ROUTES.CONTACTS}>\n            <ContactsPage contacts={contacts} createContact={createContact} />\n          </Route>\n          <Route path={ROUTES.APPOINTMENTS}>\n            <AppointmentsPage\n              contacts={contacts}\n              appointments={appointments}\n              createAppointment={createAppointment}\n            />\n          </Route>\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}